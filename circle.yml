machine:
  environment:
    GOPATH: "$HOME/go"
    REPO: "$GOPATH/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"
    PATH: "$PATH:/usr/local/go/bin:$GOPATH/bin"

  services:
    - docker
  node:
    version: 6.1.0
dependencies:
  cache_directories:
    - "node_modules"
    - "vendor"
    - "~/go"
  pre:
    - sudo rm -rf /usr/local/go
    - curl -L https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz > go1.7.4.linux-amd64.tar.gz
    - sudo tar -C /usr/local -xzf go1.7.4.linux-amd64.tar.gz
    - mkdir -p "$REPO"
    - go get github.com/mattn/gom
    - go get -u github.com/jteeuwen/go-bindata/...
  override:
    - npm install
    - npm run-script release-compile
    - gom install
    - rsync -azC --delete ./ "$REPO"
    - cd "$REPO" && go generate
    - cd "$REPO" && gom build
database:
  pre:
    - mysql -u $DB_USER -e "CREATE DATABASE $DB_TEST_NAME CHARACTER SET utf8mb4;"
  override:
    - cd "$REPO" && gom exec goose -env test up

test:
  override:
    - export GOJIENV=test; cd "$REPO" && gom exec ginkgo -r ./
    - npm test

deployment:
  production:
    branch: master
    commands:
      - cd "$REPO" && docker build -f dockerfiles/production/Dockerfile -t h3poteto/fascia .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push h3poteto/fascia
