version: '3'
services:
  postgres:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: master
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: fascia
    ports:
      - "5432:5432"
    volumes:
      - storage:/var/lib/postgres/data

  assets:
    image: node:18-bullseye
    user: node
    volumes:
      - .:/var/opt/app
    working_dir: /var/opt/app/assets
    entrypoint: sh -c
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    command: |
      "npm install && \
      npm run dev"

  lp:
    image: node:18-bullseye
    user: node
    volumes:
      - .:/var/opt/app
    working_dir: /var/opt/app/lp
    entrypoint: sh -c
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    command: |
      "npm install && \
      npm run dev"

  go:
    image: ghcr.io/h3poteto/golang:1.17.3
    environment:
      GO111MODULE: "on"
      APPROOT: /go/src/github.com/h3poteto/fascia
      APPENV: development
      POSTGRES_HOST: postgres
      POSTGRES_USER: master
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: fascia
      CLIENT_ID: $CLIENT_ID
      CLIENT_SECRET: $CLIENT_SECRET
      ROLLBAR_TOKEN: $ROLLBAR_TOKEN
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB_NUMBER: 0
      GMAIL_APP_PASSWORD: $GMAIL_APP_PASSWORD
      RECAPTCHA_SITE_KEY: $RECAPTCHA_SITE_KEY
      RECAPTCHA_SECRET_KEY: $RECAPTCHA_SECRET_KEY
    volumes:
      - .:/go/src/github.com/h3poteto/fascia
    working_dir: /go/src/github.com/h3poteto/fascia
    links:
      - redis:redis
      - postgres:postgres
    ports:
      - "9090:9090"
    command: /bin/sh

  redis:
    image: redis:7.0-alpine

volumes:
  storage:
  module:
